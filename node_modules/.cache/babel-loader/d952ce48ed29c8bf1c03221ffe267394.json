{"ast":null,"code":"var _jsxFileName = \"/Users/maia01/Desktop/shere-st/src/components/Stepper.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass LineStepper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.steps = getSteps();\n    this.classes = useStyles();\n    this.state = {\n      activeStep: 0,\n      setActiveStep: 0,\n      skipped: [],\n      setSkipped: []\n    };\n\n    this.isStepOptional = step => {\n      return step === 1;\n    };\n\n    this.isStepSkipped = step => {\n      return this.skipped.has(step);\n    };\n\n    this.handleNext = () => {\n      let newSkipped = this.skipped;\n\n      if (this.isStepSkipped(this.activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(this.activeStep);\n      }\n\n      this.state.setActiveStep(prevActiveStep => prevActiveStep + 1);\n      this.state.setSkipped(newSkipped);\n    };\n\n    this.handleBack = () => {\n      this.state.setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    this.handleReset = () => {\n      this.state.setActiveStep(0);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: this.activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.steps.map((label, index) => {\n      const stepProps = {};\n      const labelProps = {};\n\n      if (this.isStepOptional(index)) {\n        labelProps.optional = React.createElement(Typography, {\n          variant: \"caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Optional\");\n      }\n\n      if (this.isStepSkipped(index)) {\n        stepProps.completed = false;\n      }\n\n      return React.createElement(Step, Object.assign({\n        key: label\n      }, stepProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), label));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.activeStep === this.steps.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.classes.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: this.handleReset,\n      className: this.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.classes.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, getStepContent(this.state.activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.activeStep === 0,\n      onClick: this.handleBack,\n      className: this.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Back\"), this.isStepOptional(this.state.activeStep) && React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSkip,\n      className: this.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Skip\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: this.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.activeStep === this.steps.length - 1 ? 'Finish' : 'Next')))));\n  }\n\n}\n\nexport default LineStepper;","map":{"version":3,"sources":["/Users/maia01/Desktop/shere-st/src/components/Stepper.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","LineStepper","Component","steps","classes","state","activeStep","setActiveStep","skipped","setSkipped","isStepOptional","isStepSkipped","has","handleNext","newSkipped","Set","values","delete","prevActiveStep","handleBack","handleReset","render","map","label","index","stepProps","labelProps","optional","completed","length","handleSkip"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\n\n\nclass LineStepper extends React.Component {\n  steps = getSteps();\n  classes = useStyles()\n  state={\n    activeStep: 0,\n    setActiveStep: 0,\n    skipped: [],\n    setSkipped: []\n  };\n\n  \n  isStepOptional = step => {\n    return step === 1;\n  };\n\n  isStepSkipped = step => {\n    return this.skipped.has(step);\n  };\n\n  handleNext = () => {\n    let newSkipped = this.skipped;\n    if (this.isStepSkipped(this.activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(this.activeStep);\n    }\n\n    this.state.setActiveStep(prevActiveStep => prevActiveStep + 1);\n    this.state.setSkipped(newSkipped);\n  };\n\n  handleBack = () => {\n    this.state.setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n\n\n  handleReset = () => {\n    this.state.setActiveStep(0);\n  };\n\n\n  render(){\n    return (\n      <div className={this.classes.root}>\n        <Stepper activeStep={this.activeStep}>\n          {this.steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (this.isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (this.isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {this.activeStep === this.steps.length ? (\n            <div>\n              <Typography className={this.classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={this.handleReset} className={this.classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={this.classes.instructions}>{getStepContent(this.state.activeStep)}</Typography>\n              <div>\n                <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} className={this.classes.button}>\n                  Back\n                </Button>\n                {this.isStepOptional(this.state.activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleSkip}\n                    className={this.classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n  \n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleNext}\n                  className={this.classes.button}\n                >\n                  {this.state.activeStep === this.steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      );\n  }\n  \n  \n}\n\nexport default LineStepper"]},"metadata":{},"sourceType":"module"}
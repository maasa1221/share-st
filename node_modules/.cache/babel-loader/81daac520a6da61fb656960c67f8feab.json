{"ast":null,"code":"var _jsxFileName = \"/Users/maia01/Desktop/shere-st/src/components/Stepper.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass LineStepper extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.steps = getSteps();\n    this.classes = useStyles()[(activeStep, setActiveStep)] = React.useState(0)[(skipped, setSkipped)] = React.useState(new Set());\n\n    this.isStepOptional = step => {\n      return step === 1;\n    };\n\n    this.isStepSkipped = step => {\n      return this.skipped.has(step);\n    };\n\n    this.handleNext = () => {\n      let newSkipped = this.skipped;\n\n      if (isStepSkipped(this.activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(this.activeStep);\n      }\n\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n      setSkipped(newSkipped);\n    };\n\n    this.handleBack = () => {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    this.handleReset = () => {\n      setActiveStep(0);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: this.activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.steps.map((label, index) => {\n      const stepProps = {};\n      const labelProps = {};\n\n      if (isStepOptional(index)) {\n        labelProps.optional = React.createElement(Typography, {\n          variant: \"caption\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Optional\");\n      }\n\n      if (isStepSkipped(index)) {\n        stepProps.completed = false;\n      }\n\n      return React.createElement(Step, Object.assign({\n        key: label\n      }, stepProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), label));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.activeStep === steps.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: handleReset,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, getStepContent(activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: handleBack,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Back\"), isStepOptional(activeStep) && React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSkip,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Skip\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleNext,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n  }\n\n}\n\nexport default LineStepper();","map":{"version":3,"sources":["/Users/maia01/Desktop/shere-st/src/components/Stepper.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","LineStepper","Component","steps","classes","activeStep","setActiveStep","useState","skipped","setSkipped","Set","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleReset","render","map","label","index","stepProps","labelProps","optional","completed","length","handleSkip"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\n\n\n\nclass LineStepper extends React.Component {\n  steps = getSteps()\n  classes = useStyles()\n  [activeStep,setActiveStep] = React.useState(0)\n  [skipped, setSkipped] = React.useState(new Set())\n  \n  isStepOptional = step => {\n    return step === 1;\n  };\n\n  isStepSkipped = step => {\n    return this.skipped.has(step);\n  };\n\n  handleNext = () => {\n    let newSkipped = this.skipped;\n    if (isStepSkipped(this.activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(this.activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n\n\n  handleReset = () => {\n    setActiveStep(0);\n  };\n\n\n  render(){\n    \n  \n    return (\n      <div className={this.classes.root}>\n        <Stepper activeStep={this.activeStep}>\n          {this.steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {this.activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n  \n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>);\n  }\n  \n  \n}\n\nexport default LineStepper();"]},"metadata":{},"sourceType":"module"}